# Generated by Django 4.0.1 on 2022-01-22 20:27

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Setting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('default', models.BooleanField(default=False)),
                ('name', models.CharField(default='Default', max_length=50)),
                ('version', models.CharField(default='0.1', max_length=10)),
                ('starting_map', models.IntegerField(default=65796)),
                ('seed', models.CharField(max_length=32)),
                ('replace_duplicate_keys', models.BooleanField(default=False)),
                ('duplicate_key_replacement', models.IntegerField(default=194)),
                ('blocks_match_content', models.BooleanField(default=True)),
                ('initial_coins', models.IntegerField(default=50)),
                ('cap_enemy_xp', models.BooleanField(default=True)),
                ('damage_2x', models.BooleanField(default=False)),
                ('damage_4x', models.BooleanField(default=False)),
                ('one_hit_ko', models.BooleanField(default=False)),
                ('flower_gate_open', models.BooleanField(default=False)),
                ('blue_house_open', models.BooleanField(default=False)),
                ('placement_algorithm', models.CharField(choices=[('ForwardFill', 'Forward Fill'), ('WeightedForwardFill', 'Weighted Forward Fill'), ('AssumedFill', 'Assumed Fill'), ('CustomSeed', 'Custom Seed')], default='ForwardFill', max_length=50)),
                ('placement_logic', models.CharField(choices=[('NoGlitches', 'No Glitches'), ('WeightedForwardFill', 'Glitches'), ('AssumedFill', 'No Logic')], default='NoGlitches', max_length=50)),
                ('shuffle_items', models.BooleanField(default=True)),
                ('include_coins', models.BooleanField(default=False)),
                ('include_shops', models.BooleanField(default=True)),
                ('include_panels', models.BooleanField(default=True)),
                ('key_items_outside_area', models.BooleanField(default=True)),
                ('key_items_outside_chapter', models.BooleanField(default=True)),
                ('shuffle_entrances', models.BooleanField(default=True)),
                ('shuffle_entrances_by_area', models.BooleanField(default=True)),
                ('shuffle_entrances_by_all', models.BooleanField(default=False)),
                ('match_entrance_types', models.BooleanField(default=True)),
                ('randomize_oneway_entrances', models.BooleanField(default=False)),
                ('unpaired_entrances', models.BooleanField(default=False)),
                ('random_quiz', models.BooleanField(default=True)),
                ('skip_quiz', models.BooleanField(default=False)),
                ('start_with_random_partners', models.BooleanField(default=False)),
                ('random_partners_min', models.IntegerField(default=1)),
                ('random_partners_max', models.IntegerField(default=8)),
                ('start_with_goombario', models.BooleanField(default=True)),
                ('start_with_kooper', models.BooleanField(default=False)),
                ('start_with_bombette', models.BooleanField(default=False)),
                ('start_with_parakarry', models.BooleanField(default=False)),
                ('start_with_bow', models.BooleanField(default=False)),
                ('start_with_watt', models.BooleanField(default=False)),
                ('start_with_sushie', models.BooleanField(default=False)),
                ('start_with_lakilester', models.BooleanField(default=False)),
                ('spoiler_log', models.BooleanField(default=True)),
                ('pretty_spoiler_log', models.BooleanField(default=True)),
                ('color_a', models.IntegerField(default=3957749759)),
                ('color_b', models.IntegerField(default=2388272639)),
            ],
        ),
    ]
